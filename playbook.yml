---
# Run Prometheus as service

- hosts: grilab.io
  connection: local
  become: yes
  become_user: root

  tasks:

   - name: check prometheus group
     group:
       name: prometheus
       system: true
       state: present

   - name: check prometheus user
     user:
       name: prometheus
       system: true
       shell: /sbin/nologin
       group: prometheus
       createhome: false
       home: /opt/prometheus

   - name: create prometheus directory
     file:
       path: /opt/prometheus
       state: directory
       owner: prometheus
       group: prometheus
       mode: 0755

   - name: create prometheus config directory
     file:
       path: "{{ item }}"
       state: directory
       owner: root
       group: prometheus
       mode: 0770
     with_items:
       - /etc/prometheus
       - /etc/prometheus/conf.d
       - /etc/prometheus/rules
       - /etc/prometheus/file_sd

   - name: check prometheus install
     stat:
       path: /opt/prometheus/prometheus
     register: result

   - name: check grafana is download
     stat:
       path: /tmp/grafana.rpm
     register: graf

   - name: download prometheus package
     unarchive: 
       src: https://github.com/prometheus/prometheus/releases/download/v2.16.0/prometheus-2.16.0.linux-amd64.tar.gz
       dest: /opt/prometheus
       extra_opts: [--strip-components=1]
       copy: no
     when: result.stat.exists == false

   - name: create systemd prometheus.service
     template:
       src: template/prometheus.service.j2
       dest: /etc/systemd/system/prometheus.service
       owner: root
       group: root
       mode: 0644
     notify:
        - restart prometheus

   - name: configure prometheus
     template:
       src: template/prometheus.config.j2
       dest: /etc/prometheus/prometheus.yml
       force: true
       owner: root
       group: prometheus
       mode: 0640
       validate: "/opt/prometheus/promtool check config %s"
     notify:
       - reload prometheus

   - name: download grafana
     get_url:
       url: https://dl.grafana.com/oss/release/grafana-6.6.1-1.x86_64.rpm       
       dest: /tmp/grafana.rpm 
     when: graf.stat.exists == false

   - name: install grafana
     yum:
       name: /tmp/grafana.rpm
       state: present
     notify:
       - start grafana
                     
   - name: allow grafana port
     firewalld:
         port: 3003/tcp
         permanent: yes
         state: enabled

   - name: allow prometheus port
     firewalld:
         port: 9091/tcp
         permanent: yes
         state: enabled
     notify: reload firewall

  handlers:

   - name: restart prometheus
     become: true
     systemd:
       daemon_reload: true
       name: prometheus
       state: restarted
      
   - name: reload prometheus
     become: true
     systemd:
       name: prometheus
       state: reloaded

   - name: start grafana
     become: true
     systemd:
       name: grafana-server
       state: started

   - name: reload firewall
     command: firewall-cmd --reload
...
